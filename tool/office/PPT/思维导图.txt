我不觉得我们的中心应该放在知识图谱上面
我们更应该专注算法，个性化服务的提供
对于同一个问题，面对不同的人拥有着不同的反馈结果

既然是完成任务
	就要按照标准来


然后在进行个性化思考


提问
	非结构化的知识构建

	主要是数据的分析方案
	还是数据库的构建


	主流的算法分析方案

	希望以代码为导向
		怎么写代码，使用的结构方案


知识方案
	

	现在有两个方案
		怎么构建一个更好的知识图谱
			现在感觉两者不可分离，只有我们对图谱的构建足够了解，我们才能更好的分析代码


		怎么对现有的知识图谱进行分析

			应用
				数据的应用，建立标签，增加权重，推送不同的结果

			使用代码分析
				Python，java。调用相关的库，面对数据库进行操作
				依赖算法进行数据分析，结构推送
					举个例子


工程上的任务
	不应该只是理解概念，应该大概对代码的书写，程序的构建，现有工具的具体使用有相应的了解（比如Hadoop的脚本书写）


	现在的问题
		各种概念
		怎么构建

		存储不是问题，大概能理解，重点是怎么建立联系


		优点
			可以利用复杂，松散的信息
			可是我们的代码不需要复杂的知识啊

概念

我们的重点在哪
